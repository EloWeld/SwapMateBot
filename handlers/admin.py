from typing import List
from etc.utils import get_rates_text
from loader import dp
from aiogram.types import CallbackQuery, Message, ContentType
from aiogram.dispatcher.filters import ContentTypeFilter
from aiogram.dispatcher import FSMContext
from models.deal import Deal
from models.etc import Currency
from models.tg_user import TgUser
from etc.keyboards import Keyboards


@dp.callback_query_handler(lambda c: c.data.startswith('|admin'), state="*")
async def _(c: CallbackQuery, state: FSMContext=None, user: TgUser = None):
    actions = c.data.split(':')[1:]
    
    
    if actions[0] == "main":
        await c.message.edit_text("–ê–¥–º–∏–Ω –º–µ–Ω—é", reply_markup=Keyboards.admin_menu(user))
        return
    
    if actions[0] == "setup_exchange_rates":
        currencies: List[Currency] = Currency.objects.raw({"is_available": True})
        await c.message.edit_text("üíé –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É —á—Ç–æ–±—ã —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –µ—ë –∫—É—Ä—Å\n\n–¢–µ–∫—É—â–∏–µ –∫—É—Ä—Å—ã:\n" + get_rates_text(), 
                                  reply_markup=Keyboards.Admin.choose_currency_to_change_rate(currencies))
        
    if actions[0] == "my_deals":
        deals = Deal.objects.all()
        await c.message.edit_text("üíé –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Å–¥–µ–ª–æ–∫", reply_markup=Keyboards.Admin.dealsTypes(deals))
        
    if actions[0] == "deals_with_status":
        status = actions[1]
        verbose_status = {'CANCELLED': '–û—Ç–º–µ–Ω—ë–Ω–Ω–∞—è', 'ACTIVE': '–ê–∫—Ç–∏–≤–Ω–∞—è', 'FINISHED': '–ó–∞–≤–µ—Ä—à—ë–Ω–Ω–∞—è'}[status]
        deals = Deal.objects.raw({"status": status})
        await c.message.edit_text(f"üíé –ù–∏–∂–µ —Å–ø–∏—Å–æ–∫ —Å–¥–µ–ª–æ–∫ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º {verbose_status}", reply_markup=Keyboards.Admin.deals(deals))
        
    
    if actions[0] == "finish_deal":
        deals = Deal.objects.all()
        await c.message.edit_text("–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ", reply_markup=Keyboards.back('|main'))
    if actions[0] == "cancel_deal":
        deals = Deal.objects.all()
        await c.message.edit_text("–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ", reply_markup=Keyboards.back('|main'))
        
    if actions[0] == "send_deal_receipt":
        await c.message.edit_text("üßæ –ü—Ä–∏–ª–æ–∂–∏—Ç–µ —á–µ–∫ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏", reply_markup=Keyboards.back('|main'))
        await state.set_state("send_receipt")
        



@dp.message_handler(content_types=[ContentType.PHOTO], state="send_receipt")
async def _(m: Message, state: FSMContext = None):
    await m.answer("–ß–µ–∫ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ—Ç–æ–º—É —á—Ç–æ –≤—ã –¥—É—Ä–∞–∫")