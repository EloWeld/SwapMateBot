import datetime
import random
from typing import List, Union
from etc.keyboards import Keyboards
from etc.texts import BOT_TEXTS
from etc.utils import get_rates_text
from loader import dp
from aiogram.types import CallbackQuery, Message
from aiogram.dispatcher import FSMContext
from models.deal import Deal
from models.etc import Currency
from models.tg_user import TgUser
import requests

@dp.callback_query_handler(lambda c: c.data.startswith('|convertor'), state="*")
async def _(c: CallbackQuery, state: FSMContext=None, user: TgUser = None):
    actions = c.data.split(':')[1:]
    stateData = {} if state is None else await state.get_data()
    
    if actions[0] == "deals_history":
        deals = Deal.objects.raw({"owner_id": user.id})
        if not deals:
            await c.answer("üï∏Ô∏è –í–∞—à–∞ –∏—Å—Ç–æ—Ä–∏—è —Å–¥–µ–ª–æ–∫ –ø—É—Å—Ç–∞", show_alert=True)
            return
        
        await c.message.edit_text("üìä –í–∞—à–∞ –∏—Å—Ç–æ—Ä–∏—è —Å–¥–µ–ª–æ–∫:", reply_markup=Keyboards.Deals.user_deals_history(deals))
    if actions[0] == "actual_rates":
        
        await c.message.edit_text("‚≠ê –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç –Ω–∏–∂–µ\n\n"
                                  + get_rates_text(), reply_markup=Keyboards.actual_rates())
        #await c.answer("üß† –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ", show_alert=True)
    if actions[0] == "deal_calc":
        
        await c.message.edit_text("1Ô∏è‚É£–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –û–ë–ú–ï–ù–Ø–¢–¨ –≤ –ª–µ–≤–æ–π –∫–æ–ª–æ–Ω–∫–µ\n\n2Ô∏è‚É£–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –ü–û–õ–£–ß–ò–¢–¨ –≤ –ø—Ä–∞–≤–æ–π –∫–æ–ª–æ–Ω–∫–µ", 
                                  reply_markup=Keyboards.Calc.main(stateData.get('sel_from', None), stateData.get('sel_to', None)))
    if actions[0] == "see_deal":
        try:
            deal: Deal = Deal.objects.get({"_id": int(actions[1])})
        except Deal.DoesNotExist as e:
            await c.answer(f"‚ùå –°–¥–µ–ª–∫–∞ #{actions[1]} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞", show_alert=True)
            return
        
        await c.message.edit_text(f"üí† –°–¥–µ–ª–∫–∞ <code>{deal.id}</code>\n\n"
                                  f"üö¶ –°—Ç–∞—Ç—É—Å: <code>{deal.status}</code>\n"
                                  f"üí± –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: <code>{deal.currency_symbol_from}</code>ü†ñ<code>{deal.currency_symbol_to}</code>\n"
                                  f"üìÖ –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: <code>{str(deal.created_at)[:-7]}</code>\n", 
                                  reply_markup=Keyboards.Deals.deal_info(user, deal))
        
    if actions[0] == "found_cheaper":
        await c.answer("–ú–Ω–µ —Ä–µ–∞–ª—å–Ω–æ –≤–æ—Ç –Ω–µ –≤–∞–∂–Ω–æ, –¥–µ—à–µ–≤–ª–µ —Ç—ã –Ω–∞—à—ë–ª –∏–ª–∏ –Ω–µ—Ç, —Ü–µ–Ω—ã –µ—Å—Ç—å —Ü–µ–Ω—ã. –ù—Ä–∞–≤–∏—Ç—Å—è - –Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è, —Ç–µ—Ä–ø–∏, –º–æ—è –∫—Ä–∞—Å–∞–≤–∏—Ü–∞.", show_alert=True)