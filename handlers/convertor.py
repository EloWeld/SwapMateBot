from etc.keyboards import Keyboards
from loader import dp
from aiogram.types import CallbackQuery, Message
from aiogram.dispatcher import FSMContext
from models.etc import Currency
from models.tg_user import TgUser

@dp.callback_query_handler(lambda c: c.data.startswith('|convertor'), state="*")
async def _(c: CallbackQuery, state: FSMContext=None, user: TgUser = None):
    actions = c.data.split(':')[1:]
    
    
    if actions[0] == "deals_history":
        await c.answer("üï∏Ô∏è –í–∞—à–∞ –∏—Å—Ç–æ—Ä–∏—è —Å–¥–µ–ª–æ–∫ –ø—É—Å—Ç–∞", show_alert=True)
    if actions[0] == "actual_price":
        await c.answer("üß† –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ", show_alert=True)
    if actions[0] == "deal_calc":
        await c.message.edit_text("1Ô∏è‚É£–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –û–ë–ú–ï–ù–Ø–¢–¨ –≤ –ª–µ–≤–æ–π –∫–æ–ª–æ–Ω–∫–µ\n\n2Ô∏è‚É£–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –ü–û–õ–£–ß–ò–¢–¨ –≤ –ø—Ä–∞–≤–æ–π –∫–æ–ª–æ–Ω–∫–µ", reply_markup=Keyboards.Calc.main())
        
    if actions[0] in ["sel_from", "sel_to"]:
        selected = Currency.objects.get({"symbol": actions[1]})
        await state.set_state("MakeDeal")
        if actions[0] == "sel_from":
            await state.update_data(sel_from=selected)
        elif actions[0] == "sel_to":
            await state.update_data(sel_to=selected)
         
        stateData = await state.get_data()   
        await c.message.edit_reply_markup(Keyboards.Calc.main(stateData.get('sel_from', None), stateData.get('sel_to', None)))